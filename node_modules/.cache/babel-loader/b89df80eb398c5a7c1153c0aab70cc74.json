{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport isEqual from 'react-fast-compare';\n/**\n * Create an AuthProvider component to wrap a React app with, it will take care of common AuthClient\n * lifecycle handling (such as initialization and token refresh).\n *\n * @param AuthContext the Auth context to be used by the created AuthProvider\n *\n * @returns the AuthProvider component\n */\n\nexport function createAuthProvider(AuthContext) {\n  var defaultInitOptions = {\n    onLoad: 'check-sso'\n  };\n  var initialState = {\n    initialized: false,\n    isAuthenticated: false,\n    isLoading: true\n  };\n  return (\n    /** @class */\n    function (_super) {\n      __extends(KeycloakProvider, _super);\n\n      function KeycloakProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n\n        _this.state = __assign({}, initialState);\n\n        _this.onError = function (event) {\n          return function (error) {\n            var onEvent = _this.props.onEvent; // Notify Events listener\n\n            onEvent && onEvent(event, error);\n          };\n        };\n\n        _this.updateState = function (event) {\n          return function () {\n            var _a = _this.props,\n                authClient = _a.authClient,\n                onEvent = _a.onEvent,\n                onTokens = _a.onTokens,\n                isLoadingCheck = _a.isLoadingCheck;\n            var _b = _this.state,\n                prevInitialized = _b.initialized,\n                prevAuthenticated = _b.isAuthenticated,\n                prevLoading = _b.isLoading; // Notify Events listener\n\n            onEvent && onEvent(event); // Check Loading state\n\n            var isLoading = isLoadingCheck ? isLoadingCheck(authClient) : false; // Check if user is authenticated\n\n            var isAuthenticated = isUserAuthenticated(authClient); // Avoid double-refresh if state hasn't changed\n\n            if (!prevInitialized || isAuthenticated !== prevAuthenticated || isLoading !== prevLoading) {\n              _this.setState({\n                initialized: true,\n                isAuthenticated: isAuthenticated,\n                isLoading: isLoading\n              });\n            } // Notify token listener, if any\n\n\n            var idToken = authClient.idToken,\n                refreshToken = authClient.refreshToken,\n                token = authClient.token;\n            onTokens && onTokens({\n              idToken: idToken,\n              refreshToken: refreshToken,\n              token: token\n            });\n          };\n        };\n\n        _this.refreshToken = function (event) {\n          return function () {\n            var _a = _this.props,\n                autoRefreshToken = _a.autoRefreshToken,\n                authClient = _a.authClient,\n                onEvent = _a.onEvent; // Notify Events listener\n\n            onEvent && onEvent(event);\n\n            if (autoRefreshToken !== false) {\n              // Refresh Keycloak token\n              authClient.updateToken(5);\n            }\n          };\n        };\n\n        return _this;\n      }\n\n      KeycloakProvider.prototype.componentDidMount = function () {\n        this.init();\n      };\n\n      KeycloakProvider.prototype.componentDidUpdate = function (_a) {\n        var prevAuthClient = _a.authClient,\n            prevInitOptions = _a.initOptions;\n        var _b = this.props,\n            initOptions = _b.initOptions,\n            authClient = _b.authClient;\n\n        if (authClient !== prevAuthClient || !isEqual(initOptions, prevInitOptions)) {\n          // De-init previous AuthClient instance\n          prevAuthClient.onReady = undefined;\n          prevAuthClient.onAuthSuccess = undefined;\n          prevAuthClient.onAuthError = undefined;\n          prevAuthClient.onAuthRefreshSuccess = undefined;\n          prevAuthClient.onAuthRefreshError = undefined;\n          prevAuthClient.onAuthLogout = undefined;\n          prevAuthClient.onTokenExpired = undefined; // Reset state\n\n          this.setState(__assign({}, initialState)); // Init new AuthClient instance\n\n          this.init();\n        }\n      };\n\n      KeycloakProvider.prototype.init = function () {\n        var _a = this.props,\n            initOptions = _a.initOptions,\n            authClient = _a.authClient; // Attach Keycloak listeners\n\n        authClient.onReady = this.updateState('onReady');\n        authClient.onAuthSuccess = this.updateState('onAuthSuccess');\n        authClient.onAuthError = this.onError('onAuthError');\n        authClient.onAuthRefreshSuccess = this.updateState('onAuthRefreshSuccess');\n        authClient.onAuthRefreshError = this.onError('onAuthRefreshError');\n        authClient.onAuthLogout = this.updateState('onAuthLogout');\n        authClient.onTokenExpired = this.refreshToken('onTokenExpired');\n        authClient.init(__assign(__assign({}, defaultInitOptions), initOptions)).catch(this.onError('onInitError'));\n      };\n\n      KeycloakProvider.prototype.render = function () {\n        var _a = this.props,\n            children = _a.children,\n            authClient = _a.authClient,\n            LoadingComponent = _a.LoadingComponent;\n        var _b = this.state,\n            initialized = _b.initialized,\n            isLoading = _b.isLoading;\n\n        if (!!LoadingComponent && (!initialized || isLoading)) {\n          return LoadingComponent;\n        }\n\n        return React.createElement(AuthContext.Provider, {\n          value: {\n            initialized: initialized,\n            authClient: authClient\n          }\n        }, children);\n      };\n\n      return KeycloakProvider;\n    }(React.PureComponent)\n  );\n}\n\nfunction isUserAuthenticated(authClient) {\n  return !!authClient.idToken && !!authClient.token;\n}\n\nexport default createAuthProvider;","map":{"version":3,"mappings":"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","names":["React","isEqual","createAuthProvider","AuthContext","defaultInitOptions","onLoad","initialState","initialized","isAuthenticated","isLoading","__extends","_this","__assign","event","error","props","onEvent","authClient","onTokens","isLoadingCheck","state","prevInitialized","prevAuthenticated","prevLoading","isUserAuthenticated","setState","refreshToken","token","idToken","autoRefreshToken","updateToken","KeycloakProvider","init","_a","prevAuthClient","prevInitOptions","initOptions","onReady","undefined","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onAuthLogout","onTokenExpired","updateState","onError","catch","children","LoadingComponent","Provider","value","PureComponent"],"sources":["@react-keycloak/core/provider.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}